{
  "swagger": "2.0",
  "info": {
    "title": "Swagger Petstore (Simple)",
    "description": "A sample API that uses a petstore as an example to demonstrate features in the swagger-2.0 specification",
    "version": "1.0.0"
  },
  "produces": ["application/json"],
  "host": "107.167.184.165:8080",
  "basePath": "/api",
  "paths": {
  
  "/pets/{id}": {
  	
    "get": {
      "summary": "",
      "description":"Returns a user based on a single ID, if the user does not have access to the pet",
      "x-swagger-router-controller": "Default",
      "tags": ["Default"],
      "operationId": "findPetById",
      "parameters": [
        {
  "name" : "id",
  "in" : "path",
  "description" : "ID of pet to fetch",
  "required" : true,
  "type" : "integer",
  "format" : "int64"
}
        
      ],
      "responses": {
        "200": {
  "description" : "pet response",
  "schema" : {
    "$ref" : "#/definitions/pet"
  }
}
        ,
        "default": {
  "description" : "unexpected error",
  "schema" : {
    "$ref" : "#/definitions/errorModel"
  }
}
        
        
      }
    } ,
    
    "delete": {
      "summary": "",
      "description":"deletes a single pet based on the ID supplied",
      "x-swagger-router-controller": "Default",
      "tags": ["Default"],
      "operationId": "deletePet",
      "parameters": [
        {
  "name" : "id",
  "in" : "path",
  "description" : "ID of pet to delete",
  "required" : true,
  "type" : "integer",
  "format" : "int64"
}
        
      ],
      "responses": {
        "204": {
  "description" : "pet deleted"
}
        ,
        "default": {
  "description" : "unexpected error",
  "schema" : {
    "$ref" : "#/definitions/errorModel"
  }
}
        
        
      }
    } 
    
  } ,
  
  "/pets": {
  	
    "get": {
      "summary": "",
      "description":"Returns all pets from the system that the user has access to",
      "x-swagger-router-controller": "Default",
      "tags": ["Default"],
      "operationId": "findPets",
      "parameters": [
        {
  "name" : "tags",
  "in" : "query",
  "description" : "tags to filter by",
  "required" : false,
  "type" : "array",
  "items" : {
    "type" : "string"
  },
  "collectionFormat" : "csv"
},
        {
  "name" : "limit",
  "in" : "query",
  "description" : "maximum number of results to return",
  "required" : false,
  "type" : "integer",
  "format" : "int32"
}
        
      ],
      "responses": {
        "200": {
  "description" : "pet response",
  "schema" : {
    "type" : "array",
    "items" : {
      "$ref" : "#/definitions/pet"
    }
  }
}
        ,
        "default": {
  "description" : "unexpected error",
  "schema" : {
    "$ref" : "#/definitions/errorModel"
  }
}
        
        
      }
    } ,
    
    "post": {
      "summary": "",
      "description":"Creates a new pet in the store.  Duplicates are allowed",
      "x-swagger-router-controller": "Default",
      "tags": ["Default"],
      "operationId": "addPet",
      "parameters": [
        {
  "in" : "body",
  "name" : "pet",
  "description" : "Pet to add to the store",
  "required" : true,
  "schema" : {
    "$ref" : "#/definitions/newPet"
  }
}
        
      ],
      "responses": {
        "200": {
  "description" : "pet response",
  "schema" : {
    "$ref" : "#/definitions/pet"
  }
}
        ,
        "default": {
  "description" : "unexpected error",
  "schema" : {
    "$ref" : "#/definitions/errorModel"
  }
}
        
        
      }
    } 
    
  } 
  
   
  }, "definitions": {
  "pet": {
  "required" : [ "id", "name" ],
  "properties" : {
    "id" : {
      "type" : "integer",
      "format" : "int64"
    },
    "name" : {
      "type" : "string"
    },
    "tag" : {
      "type" : "string"
    }
  }
},"newPet": {
  "required" : [ "name" ],
  "properties" : {
    "id" : {
      "type" : "integer",
      "format" : "int64"
    },
    "name" : {
      "type" : "string"
    },
    "tag" : {
      "type" : "string"
    }
  }
},"errorModel": {
  "required" : [ "code", "message" ],
  "properties" : {
    "code" : {
      "type" : "integer",
      "format" : "int32"
    },
    "message" : {
      "type" : "string"
    }
  }
}
  }
}
